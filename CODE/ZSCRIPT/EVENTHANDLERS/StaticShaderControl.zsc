Class SDPWHScreenEffects : StaticEventHandler
{
	override void RenderOverlay(RenderEvent e)
	{
		PlayerInfo players = players[consoleplayer];

		//Shader.SetEnabled(players, "dscHeatHaze", false);
		Shader.SetUniform1f(players, "dscHeatHaze", "timer", gametic + e.FracTic);
		if(players.mo.FindInventory("HeatHazeTimerInv")) Shader.SetUniform1f(players, "dscHeatHaze", "timer", gametic + e.FracTic);
		else Shader.SetEnabled(players, "dscHeatHaze", false);
/*

		if((level.mapName == "DSCOUTRO")){
			Shader.SetUniform1f(players, "TiltShiftPass1v", "Angle", 90.0);
			Shader.SetEnabled(players, "TiltShiftPass1v", true);
			Shader.SetEnabled(players, "TiltShiftPass2v", true);
			Shader.SetEnabled(players, "TiltShiftPass3v", true);
		} else {
			Shader.SetEnabled(players, "TiltShiftPass1v", false);
			Shader.SetEnabled(players, "TiltShiftPass2v", false);
			Shader.SetEnabled(players, "TiltShiftPass3v", false);
		}
*/

		if((level.mapName == "TITLEMAP") || (CALLacs("DemogliphStarted", 0, 0, 0) > 0)){
			Shader.SetEnabled(players, "TiltShiftPass1", true);
			Shader.SetEnabled(players, "TiltShiftPass2", true);
			Shader.SetEnabled(players, "TiltShiftPass3", true);
		} else {
			Shader.SetEnabled(players, "TiltShiftPass1", false);
			Shader.SetEnabled(players, "TiltShiftPass2", false);
			Shader.SetEnabled(players, "TiltShiftPass3", false);
		}

		if((level.mapName != "TITLEMAP")){
			if((CALLacs("DemogliphStarted", 0, 0, 0) > 0)){
				Shader.SetEnabled(players, "TonemapDamned", true);
			} else {Shader.SetEnabled(players, "TonemapDamned", false);}
		}


		if (Cvar.GetCVar("dpwh_filmictonemap", players).GetInt() > 0){
			DisableLUTshaders();
			Shader.SetEnabled(players, "TonemapDefault", true);
			if((level.mapName == "TITLEMAP")){
				DisableLUTshaders();
				Shader.SetEnabled(players, "TonemapTitlemap", true);
			}
			if((level.mapName == "DSCMAP01")){
				DisableLUTshaders();
				Shader.SetEnabled(players, "TonemapCemetery", true);
			}
			if((level.mapName == "DSCMAP02")){
				DisableLUTshaders();
				Shader.SetEnabled(players, "TonemapCemetery", true);
			}
			if((level.mapName == "DSCMAP03")){
				DisableLUTshaders();
				Shader.SetEnabled(players, "TonemapPlaza", true);
			}
			if((level.mapName == "DSCMAP04")){
				DisableLUTshaders();
				Shader.SetEnabled(players, "TonemapArena", true);
			}
			if((level.mapName == "DSCMAP05")){
				DisableLUTshaders();
				Shader.SetEnabled(players, "TonemapSalvation", true);
			}
			if((level.mapName == "DSCMAP06")){
				DisableLUTshaders();
				Shader.SetEnabled(players, "TonemapTitlemap", true);
			}
			if((level.mapName == "DSCMAP07")){
				DisableLUTshaders();
				Shader.SetEnabled(players, "TonemapTide", true);
			}
			if((level.mapName == "DSCMAP09")){
				DisableLUTshaders();
				Shader.SetEnabled(players, "TonemapSnow", true);
			}
			if((level.mapName == "DSCMAP10")){
				//DisableLUTshaders();
				//Shader.SetEnabled(players, "TonemapBlood", true);
			}
		} else {DisableLUTshaders();}


		if (Cvar.GetCVar("dpwh_chromaticAberration", players).GetInt() > 0)
		{
			Cvar.GetCvar("gl_lens",players).SetInt(0);
			EnableCubicCA();
		}
		else
		{
			DisableCubicCA();
		}
		if (Cvar.GetCVar("dpwh_naturalVignette", players).GetInt() > 0)
		{
			EnableNaturalVignette();
		}
		else
		{
			DisableNaturalVignette();
		}

		if (Cvar.GetCVar("dpwh_filmgrain", players).GetInt() > 0)
		{
			EnableFilmGrain(e);
		}
		else
		{
			DisableFilmGrain();
		}
	}




	ui void DisableLUTshaders(void)
	{
		PlayerInfo players = players[consoleplayer];
		Shader.SetEnabled(players, "TonemapDefault", false);
		Shader.SetEnabled(players, "TonemapArena", false);
		Shader.SetEnabled(players, "TonemapSalvation", false);
		Shader.SetEnabled(players, "TonemapPlaza", false);
		Shader.SetEnabled(players, "TonemapCemetery", false);
		Shader.SetEnabled(players, "TonemapTitlemap", false);
		Shader.SetEnabled(players, "TonemapTide", false);
		Shader.SetEnabled(players, "TonemapSnow", false);
		//Shader.SetEnabled(players, "TonemapBlood", false);

	}


	ui void EnableFilmGrain(RenderEvent e)
	{
		PlayerInfo players = players[consoleplayer];
		Shader.SetUniform1f(players, "FilmGrain", "timer", gametic + e.FracTic);
		Shader.SetEnabled(players, "FilmGrain", true);
	}

	ui void DisableFilmGrain(void)
	{
		PlayerInfo players = players[consoleplayer];
		Shader.SetEnabled(players, "FilmGrain", false);
	}



	ui void EnableNaturalVignette(void)
	{
		PlayerInfo players = players[consoleplayer];
		Shader.SetEnabled(players, "NaturalVignette", true);
	}

	ui void DisableNaturalVignette(void)
	{
		PlayerInfo players = players[consoleplayer];
		Shader.SetEnabled(players, "NaturalVignette", false);
	}

	ui void EnableCubicCA(void)
	{
		PlayerInfo players = players[consoleplayer];
		Shader.SetEnabled(players, "CubicCA", true);
	}

	ui void DisableCubicCA(void)
	{
		PlayerInfo players = players[consoleplayer];
		Shader.SetEnabled(players, "CubicCA", false);
	}
/*
	ui void EnableFilmicToneMap(void)
	{
		PlayerInfo players = players[consoleplayer];
		Shader.SetEnabled(players, "FilmicTonemap", true);
	}

	ui void DisableFilmicToneMap(void)
	{
		PlayerInfo players = players[consoleplayer];
		Shader.SetEnabled(players, "FilmicTonemap", false);
	}
*/
}